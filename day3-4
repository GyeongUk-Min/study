// 3일차 문자열 압축 (코테 p323 8번 카카오 공채 문제)

import Foundation

func solution(_ s:String) -> Int {

    //
    var arr = s.count
    var result = s.count

    // 문자열 길이가 2 이하일 경우 그대로 return
    if s.count == 1 { return 1 }
    if s.count == 2 { return 2 }

    // 압축 단위를 1개부터 n/2+1개까지 늘려가며 확인
    for i in 1...(s.count / 2 + 1) {
        var compress = ""
        // 중복체크할 문자열 i추출
        var prev = s[s.startIndex...s.index(s.startIndex, offsetBy: i-1)]
        var cnt = 1

        // 추출 된 문자열 i 자리부터 i 만큼 증가시키며 이전 문자열과 같은지 비교
        for j in stride(from: i, to: s.count, by: i) {
            // 같다면 cnt 증가
            if prev == s[s.index(s.startIndex, offsetBy: j-1)...s.index(s.startIndex, offsetBy: j+i-1)] {
                cnt += 1
            } else {
                // 문자열이 다르거나 더 이상 압축하지 못할 경우
                if cnt >= 2 {
                    // 중복된 횟수(cnt)만큼 문자 앞에 추가
                    compress += String(cnt) + String(prev)
                } else {
                    compress += String(prev)
                }
                // 비교할 문자열 초기화
                prev = s[s.index(s.startIndex, offsetBy: j-1)...s.index(s.startIndex, offsetBy: j+i-1)]
                cnt = 1
            }
            // 남은 문자열 처리
            if cnt >= 2 {
                compress += String(cnt) + String(prev)
            } else {
                compress += String(prev)
            }
            arr = compress.count
            if result > arr {
                result = arr
            }
        }
    }

    return result
}






// 4일차

import Foundation

func solution(_ s:String) -> Int {

    // 압축 결과를 저장할 배열
    var str = s
    
    // s의 길이가 2이하일 경우 길이만큼 return
    if s.count == 1 { return 1 }
    if s.count == 2 { return 2 }
    
    for i in 1 ... s.count / 2 {
        var s = s
        // 문자열을 나누고 배열
        var array_s = [String]()
        // 문자열을 i 단위로 나누기
        while !s.isEmpty {
            let a = String(s.prefix(i))
            array_s.append(a)

            if s.count < i {
                s.removeAll()
            } else {
                s.removeFirst(i)
            }
        }
        
        // 문자열 압축
        var previous = ""
        var compress = ""
        var count = 1
        
        for j in 0 ..< array_s.count {
            
            if previous == "" {
                previous = array_s[0]
            } else {
                // 중복될 경우 count 증가
                if previous == array_s[j]{
                    count += 1
                } else {
                    // count가 1이 아닐 경우 숫자 추가
                    if count == 1 {
                        compress.append("\(previous)")
                    } else {
                        compress.append("\(count)\(previous)")
                    }
                    // 비교 데이터 초기화
                    previous = array_s[j]
                    count = 1
                }
            }
        }
        
        if count == 1 {
            compress.append("\(previous)")
        } else {
            compress.append("\(count)\(previous)")
        }

        if compress.count < str.count {
            str = compress
        }
    }
    
    return str.count
}
